window.docContents[1].resolve({"/#PSBP-Documentation--The--PSBP--Library-type-classes--class-Functional":{"id":"/#PSBP-Documentation--The--PSBP--Library-type-classes--class-Functional","header":"3.1. class Functional","context":"PSBP Documentation\u0009The  PSBP  Library type classes","contents":"Functions can, somehow, be used as programs. Well, functions are what pure functional programming is all about.\nFunctions that are used as programs are effectless. We can define functions as programs in a formal way by defining a\ntype class. This is what we do with the Functional type class.\n\nclass Functional (program : Type → Type → Type) where\n  asProgram {α β : Type} :\n    (α → β) → program α β\n\nexport Functional (asProgram)\n\n\nA program, just like a function, transforms an initial value, its argument, to a final one, its result. By the way, a\nvalue can repesent many values as a (nested) product. Such a value is called a multi-value. More about this later.\n\n"}});