window.docContents[56].resolve({"/#PSBP-Documentation--Positional-Programming--instance-Positional":{"id":"/#PSBP-Documentation--Positional-Programming--instance-Positional","header":"9.4. instance Positional","context":"PSBP Documentation\u0009Positional Programming","contents":"The at_ library level keyword of Positional can be defined in terms of Functional, Creational and Sequential.\n\ninstance\n    [Functional program]\n    [Creational program]\n    [Sequential program] :\n    Positional program where\n  at_ {σ α β γ : Type} :\n    program α β →\n    program σ α →\n    program (σ × β) γ →\n    program σ γ :=\n      λ αpβ σpα =>\n        let_ (σpα >=> αpβ)\n\n\nThink of σpα as accessing a (multi-)value, α, on the runtime stack, σ. Think of αpβ as transforming that\n(multi-)value to β. let_ then pushes β on σ obtaining σ × β. So, if it possible to transform the runtime stack\nσ to α, to transform α to an intermediate value β and to transform σ × β to γ, then it is possible to\ntransform σ to γ.\n\n"}});