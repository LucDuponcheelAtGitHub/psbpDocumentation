window.docContents[177].resolve({"/#PSBP-Documentation--Programming-With-State--ProgramWithState":{"id":"/#PSBP-Documentation--Programming-With-State--ProgramWithState","header":"9.4. ProgramWithState","context":"PSBP Documentation\u0009Programming With State","contents":"abbrev ProgramWithState σ computation :=\n  FromComputationValuedFunction (StateT σ computation)\n\ndef materializeWithState\n    [Monad computation] {α β : Type} :\n  ProgramWithState σ computation α β →\n  α →\n  σ →\n  computation β :=\n    λ ⟨αfstσcβ⟩ =>\n      λ α =>\n        λ σ =>\n          StateT.run (αfstσcβ α) σ >>=\n            λ (β, _) => pure β\n\ndef materializeActiveWithState {α β : Type} :\n  ProgramWithState σ Active α β → α → σ → β :=\n    materializeWithState\n\n\n"},"/#PSBP-Documentation--Programming-With-Failure--WithFailure-___":{"id":"/#PSBP-Documentation--Programming-With-Failure--WithFailure-___","header":"10.1. WithFailure ε","context":"PSBP Documentation\u0009Programming With Failure","contents":"PSBP enables programming with failure using the WithFailure class below.\n\nclass WithFailure\n    (ε : outParam Type)\n    (program : Type → Type →Type) where\n  failureWith {α β : Type} : (α → ε) → program α β\n\nexport WithFailure (failureWith)\n\n\n"}});