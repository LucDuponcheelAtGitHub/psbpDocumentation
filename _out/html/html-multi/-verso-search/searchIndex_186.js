window.docContents[186].resolve({"/Stateful-Programming/class-Stateful-___/#PSBP-Documentation--Stateful-Programming--class-Stateful-___":{"id":"/Stateful-Programming/class-Stateful-___/#PSBP-Documentation--Stateful-Programming--class-Stateful-___","header":"10.1. class Stateful σ","context":"PSBP Documentation\u0009Stateful Programming","contents":"PSBP enables stateful programming using the Stateful class below.\n\nclass Stateful\n    (σ : Type)\n    (program : Type → Type → Type) where\n  readState {α : Type} : program α σ\n  writeState : program σ Unit\n\nexport Stateful (readState writeState)\n\n\n\n\n\n\n"},"/Positional-Programming/Using--Sequential/#PSBP-Documentation--Positional-Programming--Using--Sequential":{"id":"/Positional-Programming/Using--Sequential/#PSBP-Documentation--Positional-Programming--Using--Sequential","header":"9.2. Using  Sequential","context":"PSBP Documentation\u0009Positional Programming","contents":"The someProgram02 below could also be a solution. someProgram02 makes use of Sequential.\n\ndef someProgram02\n    [Functional program]\n    [Sequential program]\n    [Creational program] :\n  program Nat Nat :=\n    minusOne &&& minusTwo &&& two &&& three >=>\n      asProgram (λ (((ν1, ν2), ν3), ν4) =>\n        ν2 + ν3 * ν1 + ν4)\n\n\n#eval\n  materializeActive\n  someProgram02\n  10\n\n\n29\n\n\nAs already mentioned before using Sequential is, in this case, an overkill.\n\n"}});