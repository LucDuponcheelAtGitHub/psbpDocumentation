window.docContents[190].resolve({"/Positional-Programming/positionalFactorialOfFibonacci___--and--positionalSumOfFibonacciAndFactorial___/#PSBP-Documentation--Positional-Programming--positionalFactorialOfFibonacci___--and--positionalSumOfFibonacciAndFactorial___":{"id":"/Positional-Programming/positionalFactorialOfFibonacci___--and--positionalSumOfFibonacciAndFactorial___/#PSBP-Documentation--Positional-Programming--positionalFactorialOfFibonacci___--and--positionalSumOfFibonacciAndFactorial___","header":"11.7. positionalFactorialOfFibonacci'  and  positionalSumOfFibonacciAndFactorial'","context":"PSBP Documentation\u0009Positional Programming","contents":"It is instructive to show the runtime stack using identity. This is done in positionalFactorialOfFibonacci' and\npositionalSumOfFibonacciAndFactorial' below.\n\nunsafe def positionalFactorialOfFibonacci'\n    [Functional program]\n    [Creational program]\n    [Sequential program]\n    [Conditional program] :\n  program (σ × Nat) (((σ × Nat) × Nat) × Nat) :=\n    fibonacci @ positionOne $\n      factorial @ positionOne $\n        identity\n\n\nunsafe def positionalSumOfFibonacciAndFactorial'\n    [Functional program]\n    [Creational program]\n    [Sequential program]\n    [Conditional program] :\n  program (σ × Nat) ((((σ × Nat) × Nat) × Nat) × Nat) :=\n    fibonacci @ positionOne $\n      factorial @ positionTwo $\n        add @ positionOneAndTwo $\n          identity\n\n\n#eval\n  materializeActive\n  positionalFactorialOfFibonacci'\n  ((), 5)\n\n\n((((), 5), 8), 40320)\n\n\n#eval\n  materializeActive\n  positionalSumOfFibonacciAndFactorial'\n  ((), 10)\n\n\n(((((), 10), 89), 3628800), 3628889)\n\n\n"}});