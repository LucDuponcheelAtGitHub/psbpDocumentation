window.docContents[142].resolve({"/Positional-Programming/class-Positional/#PSBP-Documentation--Positional-Programming--class-Positional":{"id":"/Positional-Programming/class-Positional/#PSBP-Documentation--Positional-Programming--class-Positional","header":"11.3. class Positional","context":"PSBP Documentation\u0009Positional Programming","contents":"class Positional\n    (program : Type → Type → Type) where\n  at_ {σ α β γ : Type} :\n    program α β →\n    program σ α →\n    program (σ × β) γ →\n    program σ γ\n\nexport Positional (at_)\n\ninfixl:45 \" @ \" => at_\n\n\nat_ also has infix notation @.\n\nThe σ stands for (runtime) \"stack\", and σ × β stands for β pushed onto σ. More about this later.\n\n"}});