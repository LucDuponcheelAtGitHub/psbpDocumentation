window.docContents[196].resolve({"/The--PSBP--Library-type-classes/Programs-and-program-combinators-defined-in-terms-of-the-basic-ones/#PSBP-Documentation--The--PSBP--Library-type-classes--Programs-and-program-combinators-defined-in-terms-of-the-basic-ones--def-if_":{"id":"/The--PSBP--Library-type-classes/Programs-and-program-combinators-defined-in-terms-of-the-basic-ones/#PSBP-Documentation--The--PSBP--Library-type-classes--Programs-and-program-combinators-defined-in-terms-of-the-basic-ones--def-if_","header":"3.7.3. def if_","context":"PSBP Documentation\u0009The  PSBP  Library type classes\u0009Programs and program combinators defined in terms of the basic ones","contents":"Using the if_ combinator conditional boolean logic can be expressed. A helper function and corresponding program is\nneeded to define it.\n\ndef trueToLeftFalseToRightF : α × Bool → α ⊕ α\n  | ⟨α, true⟩ => .inl α\n  | ⟨α, false⟩ => .inr α\n\ndef trueToLeftFalseToRight\n    [Functional program] :\n  program (α × Bool) (α ⊕ α) :=\n    asProgram trueToLeftFalseToRightF\n\ndef if_\n    [Functional program]\n    [Sequential program]\n    [Creational program]\n    [Conditional program] :\n  program α Bool →\n  program α β →\n  program α β →\n  program α β :=\n    λ αpb t_apβ f_apβ =>\n      let_ αpb $\n        in_ $\n          trueToLeftFalseToRight >=> t_apβ ||| f_apβ\n\ndef else_ {α} : α → α := id\n\n\nThe b in αpb stands for Bool.\n\n"}});