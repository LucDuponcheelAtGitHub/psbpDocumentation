window.docContents[208].resolve({"/fibonacci--and--factorial/fibonacci/#PSBP-Documentation--fibonacci--and--factorial--fibonacci":{"id":"/fibonacci--and--factorial/fibonacci/#PSBP-Documentation--fibonacci--and--factorial--fibonacci","header":"5.4. fibonacci","context":"PSBP Documentation\u0009fibonacci  and  factorial","contents":"Program fibonacci is defined as follows\n\nunsafe def fibonacci\n    [Functional program]\n    [Creational program]\n    [Sequential program]\n    [Conditional program] :\n  program Nat Nat :=\n    if_ isZero one $\n      else_ $\n        if_ isOne one $\n          else_ $\n            (minusOne >=> fibonacci) &&&\n            (minusTwo >=> fibonacci) >=>\n            add\n\n\n"},"/Laws/class-LawfulFunctional/#PSBP-Documentation--Laws--class-LawfulFunctional":{"id":"/Laws/class-LawfulFunctional/#PSBP-Documentation--Laws--class-LawfulFunctional","header":"6.1. class LawfulFunctional","context":"PSBP Documentation\u0009Laws","contents":"Functional comes with laws.\n\nclass LawfulFunctional (program : Type → Type → Type)\n    [Functional program]\n    [Sequential program] : Prop where\n  functional_identity :\n    (asProgram id : program α α) =\n      identity\n  functional_sequential\n      (αfβ : α → β)\n      (βfγ : β → γ) :\n    (asProgram αfβ >=> asProgram βfγ : program α γ) =\n      asProgram (βfγ ∘ αfβ)\n\n\nThe functional_identity law relates function identity and program identity, and is True per definition.\n\nThe functional_sequential law relates function sequential combination and program sequential combination.\n\n"}});