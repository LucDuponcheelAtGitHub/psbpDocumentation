window.docContents[74].resolve({"/Positional-Programming/positionalFactorialOfFibonacci--and--positionalSumOfFibonacciAndFactorial/#PSBP-Documentation--Positional-Programming--positionalFactorialOfFibonacci--and--positionalSumOfFibonacciAndFactorial":{"id":"/Positional-Programming/positionalFactorialOfFibonacci--and--positionalSumOfFibonacciAndFactorial/#PSBP-Documentation--Positional-Programming--positionalFactorialOfFibonacci--and--positionalSumOfFibonacciAndFactorial","header":"9.6. positionalFactorialOfFibonacci  and  positionalSumOfFibonacciAndFactorial","context":"PSBP Documentation\u0009Positional Programming","contents":"Below are two positional programs. The first one, positionalFactorialOfFibonacci uses only uses positionOne. The\nsecond one positionalSumOfFibonacciAndFactorial uses three positions. Positions go up starting from their use site.\n\nunsafe def positionalFactorialOfFibonacci\n    [Functional program]\n    [Creational program]\n    [Sequential program]\n    [Conditional program] :\n  program (σ × Nat) Nat :=\n    fibonacci @ positionOne $\n      factorial @ positionOne $\n        positionOne\n\n\nunsafe def positionalSumOfFibonacciAndFactorial\n    [Functional program]\n    [Creational program]\n    [Sequential program]\n    [Conditional program] :\n  program (σ × Nat) Nat :=\n    fibonacci @ positionOne $\n      factorial @ positionTwo $\n        add @ positionOneAndTwo $\n          positionOne\n\n\nPositional is not part of the list of required type class instances because it can be inferred.\n\n#eval\n  materializeActive\n  positionalFactorialOfFibonacci\n  ((), 5)\n\n\n40320\n\n\n#eval\n  materializeActive\n  positionalSumOfFibonacciAndFactorial\n  ((), 10)\n\n\n3628889\n\n\n"}});